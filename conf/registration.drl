package drools;

import java.util.ArrayList

import rules.RegistrationEvent
import rules.IRCBotFacade

global rules.IRCBotFacade IRCBOT

/*
 * A registration event:
 * a person has registered for a JUG-event
 */
declare RegistrationEvent
	@role(event)
	@expires(17m)
end

/*
 * A notification event:
 * a rule has sent a message to IRC,
 * every time a message is sent, the previous
 * Notification event is retracted and a new one
 * inserted; basically this keeps track of the last
 * time a message was sent
 */
declare Notification
	@role(event)

	bogus: int
end

/*
 * A heartbeat event
 * every second the previous heartbeat
 * is removed and a new one inserted; basically
 * this keeps track of the current time
 */
declare Heartbeat
	@role(event)

	bogus: int
end

/*
 * Initialise the heartbeat
 */
rule init
when
	not Heartbeat()
then
	insert(new Heartbeat());
end

/*
 * A new heartbeat every second
 */
rule heartbeat
	salience -100
	timer(int: 1s)
when
	$heartbeat: Heartbeat()
then
	retract($heartbeat);
	insert(new Heartbeat());
end

rule "first registration event"
when
	not Notification()
	ArrayList(size == 1)
		from collect (RegistrationEvent())
	$rEvent: RegistrationEvent()
then
	insert(new Notification());
	IRCBOT.send($rEvent.getRegistrationInfo());
end

rule "first registration events"
when
	not Notification()
	ArrayList($size: size > 1)
		from collect (RegistrationEvent())
then
	insert(new Notification());
	IRCBOT.send($size + " registrations during initialization");
end

/*
 * Give full information about one registration
 * possibly waiting until 15 minutes after the
 * last notification
 */
rule "registration event during or after wait period"
when
	$heartbeat: Heartbeat()
	not Notification(this before[0m, 15m] $heartbeat)
	$notification: Notification()
	ArrayList(size == 1)
		from collect (RegistrationEvent(this after $notification))
	$rEvent: RegistrationEvent(this after $notification)
then
	retract($notification);
	insert(new Notification());
	IRCBOT.send($rEvent.getRegistrationInfo());
end

/*
 * Give a short summary about the number of
 * registrations, waiting until 15 minutes after
 * the last notification
 */
rule "multiple registration events during or after wait period"
when
	$heartbeat: Heartbeat()
	not Notification(this before[0m, 15m] $heartbeat)
	$notification: Notification()
	ArrayList($size: size > 1)
		from collect (RegistrationEvent(this after $notification))
then
	retract($notification);
	insert(new Notification());
	IRCBOT.send($size + " registrations since last message");
end
